name: CI Pipeline

on:
  push:
    branches:
      - main
    tags: 
      - '*' 
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

  lint:
    if: "!contains(github.event.head_commit.message, 'chore: release') && github.event_name != 'push' || (github.event_name == 'push' && github.ref_type != 'tag')"
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline
      - name: Run lint
        run: npm run lint

  unit-test:
    if: "!contains(github.event.head_commit.message, 'chore: release') && github.event_name != 'push' || (github.event_name == 'push' && github.ref_type != 'tag')"
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm test

  release:
    runs-on: ubuntu-latest
    needs: unit-test
    if: "github.ref == 'refs/heads/main' && !startsWith(github.event.head_commit.message, 'chore: release') && github.ref_type == 'branch' && github.event_name != 'push' || github.ref_type != 'tag'"
    permissions:
      contents: write
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git user
        run: |
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"

      - name: Set up Git remote
        run: |
          git remote set-url origin "https://${{ secrets.GITH_TOK }}@github.com/${{ github.repository }}.git"
          git checkout main
          git pull origin main --rebase

      - name: Run release-it
        run: npx release-it --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITH_TOK }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Integration Test
        run: echo "Hello Integration !"  
   
  e2e-test:
    runs-on: ubuntu-latest
    needs: unit-test  
    if: github.event_name == 'pull_request' 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run E2E Test
        run: echo "Hello E2E !"

  only-canary:
    runs-on: ubuntu-latest
    needs: unit-test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }} 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Only Canary Test
        run: echo "Hello Only Canary !"
