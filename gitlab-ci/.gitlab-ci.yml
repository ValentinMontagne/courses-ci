image: node:latest
cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/
    - .npm/

stages:
  - validate
  - test
  - build
  - release
  - deploy

.test-echo:
  script: echo "Test done"

.disable-release:
  rules:
    - if: '$CI_COMMIT_TITLE !~ /^chore: release/'

install:
  stage: .pre
  script:
    # define cache dir & use it npm!
    - npm ci --cache .npm --prefer-offline

lint:
  stage: validate
  rules:
    - if: '$CI_COMMIT_TITLE !~ /^chore: release/'
  script:
    - npm run lint

only-canary:
  stage: validate
  rules:
    - if: $ENV_TARGET == "canary"
  extends:
    - .test-echo

unit-test:
  stage: test
  extends:
    - .disable-release
  script:
    - npm run test

integration-test:
  needs:
    - job: unit-test
  extends:
    - .test-echo
    - .disable-release

e2e-test:
  needs:
    - job: integration-test
  extends:
    - .test-echo
    - .disable-release
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"   

release:
  stage: release
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"
        && $CI_COMMIT_TAG == null
        && $CI_COMMIT_TITLE !~ /^chore: release/'
  before_script:
    - git config user.email $GITLAB_USER_EMAIL
    - git config user.name $GITLAB_USER_NAME
    - git remote set-url origin
      "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
    - git checkout $CI_COMMIT_BRANCH
    - git pull origin $CI_COMMIT_BRANCH --rebase
  script:
    - npx --yes release-it --ci