# .gitlab-ci.yml file

image: node:latest
cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/
    - .npm/
stages:
  - validate
  - test
  - build
  - release
  - deploy

install:
  stage: .pre
  script:
    # define cache dir & use it npm!
    - npm ci --cache .npm --prefer-offline
lint:
  stage: validate
  script:
    - npm run lint
  rules:
    - if: 
        '$CI_COMMIT_TAG == null
        && $CI_COMMIT_TITLE !~ /^chore: release/'

unit-test:
  stage: test
  script:
    - npm test
  rules:
    - if: 
        '$CI_COMMIT_TAG == null
        && $CI_COMMIT_TITLE !~ /^chore: release/'
 script:
    - npm ci            # Installer les dépendances à partir de package-lock.json
    - npm test          # Exécuter les tests unitaires du projet

e2e-test:             # Job pour les tests end-to-end (E2E)
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'  # Exécuter seulement pour les merge requests
  script:
    - echo "Hello E2E !"  # Commande pour les tests E2E

only-canary:          # Job pour l'environnement canary
  stage: validate
  rules:
    - if: '$ENV_TARGET == "canary"'  # Exécuter seulement si ENV_TARGET est défini sur "canary"
  script:
    - echo "Hello Only Canary !"     # Commande pour l'environnement canary

Integration-test:    # Job pour les tests d'intégration
  stage: test
  needs: 
    - run_tests        # Indique que ce job dépend du job "run_tests"
  script:
    - echo "Hello Integration !"  # Commande pour les tests d'intégration
release:
  stage: release
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"
        && $CI_COMMIT_TAG == null
        && $CI_COMMIT_TITLE !~ /^chore: release/'
  before_script:
    - git config user.email $GITLAB_USER_EMAIL
    - git config user.name 'OUKOUKES'
    - git remote set-url origin
      "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
    - git checkout $CI_COMMIT_BRANCH
    - git pull origin $CI_COMMIT_BRANCH --rebase
  script:
    - npx --yes release-it --ci
