name: Node.js CI Pipeline

on:
  push:
    branches:
      - main
      - develop-ci
  pull_request:
    branches:
      - main
      - develop-ci

jobs:
  # Étape 1 : Validation (validate)
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.17.0' # Version de Node.js spécifiée

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Lint the code
        run: npm run lint

  # Étape 2 : Tests (test)
  test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.17.0'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run tests with Vitest
        run: npm test

  # Étape 3 : Build (build)
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.17.0'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build the application
        run: npm run build

      - name: Verify dist directory
        run: |
          if [ -d "dist" ]; then
            echo "dist directory exists."
            ls dist
          else
            echo "dist directory does not exist!"
            exit 1
          fi

  # Étape 4 : Release (release)
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if dist exists and list files
        run: |
          if [ ! -d "dist" ]; then
            echo "Directory dist does not exist, skipping release step."
            exit 0
          else
            echo "Directory dist exists. Listing files:"
            ls -R dist
          fi

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-files
          path: dist/


  # Étape 5 : Deployment (deploy)
  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Deploy application
        run: echo "Deployment step goes here (e.g., uploading files to a server)"
