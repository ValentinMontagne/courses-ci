name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

  validate:
    if: "!contains(github.event.head_commit.message, 'chore: release') && github.event_name != 'push' || (github.event_name == 'push' && github.ref_type != 'tag')"
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline
      - name: Run lint
        run: npm run lint

  unit-test:
    if: "!contains(github.event.head_commit.message, 'chore: release') && github.event_name != 'push' || (github.event_name == 'push' && github.ref_type != 'tag')"
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build

  e2e-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - name: Echo Hello E2E
        run: echo "Hello E2E !"
        
  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Echo Hello Integration
        run: echo "Hello Integration !"

  release:
    runs-on: ubuntu-latest
    needs: build
    if: "github.ref == 'refs/heads/main' && !startsWith(github.event.head_commit.message, 'chore: release') && github.ref_type == 'branch'"
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Git user
        run: |
          git config --global user.email "${{ secrets.GITH_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GITH_USER_NAME }}"
      - name: Set up Git remote
        run: |
          git remote set-url origin "https://${{ secrets.GITH_TOKEN }}@github.com/${{ github.repository }}.git"
          git checkout main
          git pull origin main --rebase
      - name: Run release-it
        run: npx release-it --ci
        env:
          GITH_TOKEN: ${{ secrets.GITH_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Deploy application
        run: echo "Deploy step (to be implemented)"

  only-canary:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Check ENV_TARGET
        run: |
          if [ "${{ secrets.ENV_TARGET }}" == "canary" ]; then
            echo "Hello Only Canary !"
          else
            echo "Not a canary release."
          fi
