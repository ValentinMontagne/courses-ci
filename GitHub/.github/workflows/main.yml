name: Node.js CI
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
jobs:
  install:
    runs-on:
      ubuntu-latest
    env:
      USER_EMAL: ${{ secrets.USER_EMAIL }}
      USER_NAME: ${{ secrets.USER_NAME }}
      TOKEN: ${{ secrets.TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci --cache .npm --prefer-offline
      - name: Validate
        run: npm run lint
        if: |
          github.ref == 'refs/heads/main' &&
          !contains(github.event.head_commit.message, 'chore: release')
      - name: Test
        run: npm test
        if: |
          github.ref == 'refs/heads/main' &&
          !contains(github.event.head_commit.message, 'chore: release')
  e2e-test:
    runs-on: ubuntu-latest
    needs: install
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run E2E tests
        run: echo "Hello E2E!"
  release:
    runs-on:
      ubuntu-latest
    needs: install
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Git configuration
        run: |
          git config user.email "$USER_EMAIL"
          git config user.name "$USER_NAME"
          git remote set-url origin "https://$GITHUB_ACTOR:$TOKEN@github.com/${{ github.repository }}.git"
          git checkout ${{ github.ref_name }}
          git pull origin ${{ github.ref_name }} --rebase
      - name: Install dependencies and run release-it
        run: |
          npx --yes release-it --ci
  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy
        run: echo "Deploying application..."